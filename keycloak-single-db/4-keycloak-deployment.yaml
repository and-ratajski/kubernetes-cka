###############################################################################
####                               Postgres                                ####
###############################################################################
apiVersion: v1
kind: Service
metadata:
  labels:
    app: keycloak-postgres-svc
  name: keycloak-postgres-svc
  namespace: develop
spec:
  type: ClusterIP
  selector:
    app: keycloak-postgres
  ports:
  - port: 5432
    targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keycloak-postgres-deploy
  name: keycloak-postgres-deploy
  namespace: develop
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: keycloak-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15.2-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: keycloak-shared-config
              key: DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: keycloak-shared-config
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: DB_PASSWORD
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresql-data
        resources: {}
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: keycloak-pvc
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

###############################################################################
####                               Keycloak                                ####
###############################################################################
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: keycloak-svc
  name: keycloak-svc
  namespace: develop
spec:
  type: ClusterIP
  selector:
    app: keycloak
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keycloak-deploy
  name: keycloak-deploy
  namespace: develop
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: keycloak
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:21.0.1
        imagePullPolicy: IfNotPresent
        args:
          - "start-dev"
          - "--proxy=edge"
          - "--hostname-strict=false"
          - "--metrics-enabled=true"
          - "-Dkeycloak.profile.feature.token_exchange=enabled"
          - "-Dkeycloak.profile.feature.admin_fine_grained_authz=enabled"
        ports:
        - containerPort: 8080
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        envFrom:
        - configMapRef:
            name: keycloak-app-config
        env:
        - name: KC_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: keycloak-shared-config
              key: DB_USER
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: DB_PASSWORD
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: KEYCLOAK_ADMIN_PASSWORD
        resources: {}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
