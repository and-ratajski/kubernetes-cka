server {
    # Secure HTTPS (443) port - certs managed by Certbot
    server_name         accounts.localhost;
    listen              443 ssl;
    ssl_certificate     /var/www/certs/nginx-dev.crt; # managed manually
    ssl_certificate_key /var/www/certs/nginx-dev.key; # managed manually
    ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;

    location = /favicon.ico { 
        access_log      off; 
        log_not_found   off; 
    }
    
    # location / {
    #     # rewrite ^(.*) /$1  break;
    #     proxy_set_header    Host $http_host;
    #     proxy_set_header    X-Real-IP $remote_addr;
    #     proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header    X-Forwarded-Proto $scheme;
    #     proxy_pass          http://192.168.0.103:8081/api/v1/namespaces/develop/services/keycloak-svc/proxy/$uri$is_args$args;
    # }

    location / {
        # rewrite ^(.*) /$1  break;
        proxy_set_header    Host $http_host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_pass          http://192.168.0.103/$uri$is_args$args;
    }

}

server {
    # Insecure HTTP (80) port - permanent redirection to HTTPS
    server_name         accounts.localhost;
    listen              80;

    # if ($host = accounts.localhost) {
    #     return 301 https://$host$request_uri;
    # }
    # return              404;

    location / {
        # rewrite ^(.*) /$1  break;
        proxy_set_header    Host $http_host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_pass          http://192.168.0.103/$uri$is_args$args;
    }

}
